{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/vk-hotfix-web-app/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./panels/Home\";\nimport Place from \"./panels/Place\";\nimport Basket from \"./panels/Basket\";\nimport Order from \"./panels/Order\";\nimport Orders from \"./panels/Orders\";\nimport \"./panels/App.css\";\nimport kfc from \"./img/kfc.png\";\nimport burger from \"./img/burger.png\";\nimport mcdac from \"./img/mcdac.png\";\nimport sub from \"./img/sub.png\";\nimport OneTowar from \"./img/1.png\";\nimport TwoTowar from \"./img/2.png\";\nimport ThreeTowar from \"./img/3.png\";\nimport FourTowar from \"./img/4.png\";\nconst FOOD_AREAS = [{\n  id: \"pizikiva-gallery\",\n  name: 'ТРЦ \"Им.Пыжикова\"',\n  items: [{\n    id: \"kfc\",\n    name: \"KFC\",\n    link: \"/place/pizikiva-gallery/kfc\",\n    description: \"Сеть ресторанов быстрого питания\",\n    image: kfc,\n    foods: [{\n      id: \"classic\",\n      image: FourTowar,\n      name: \"Классик\",\n      price: 150\n    }, {\n      id: \"potato\",\n      image: OneTowar,\n      name: \"Картофель фри\",\n      price: 50\n    }]\n  }, {\n    id: \"burger-king\",\n    name: \"Burger King\",\n    link: \"/place/pizikiva-gallery/burger-king\",\n    description: \"Сеть ресторанов быстрого питания\",\n    image: burger,\n    foods: [{\n      id: \"OneTowar\",\n      name: \"Товар № 1\",\n      composition: \"Состав: по ГОСТу\",\n      price: 630,\n      image: OneTowar\n    }, {\n      id: \"TwoTowar\",\n      name: \"Товар № 2\",\n      composition: \"Состав: по ГОСТу\",\n      price: 450,\n      image: TwoTowar\n    }, {\n      id: \"ThreeTowar\",\n      name: \"Товар № 3\",\n      composition: \"Состав: по ГОСТу\",\n      price: 800,\n      image: ThreeTowar\n    }, {\n      id: \"FourthTowar\",\n      name: \"Товар № 4\",\n      composition: \"Состав по ГОСТу\",\n      price: 600,\n      image: FourTowar\n    }]\n  }, {\n    id: \"macdac\",\n    name: \"McDonal's\",\n    link: \"/place/pizikiva-gallery/macdac\",\n    description: \"Сеть ресторанов быстрого питания\",\n    image: mcdac,\n    foods: [{\n      id: \"hamburger\",\n      image: TwoTowar,\n      name: \"Гамбургер\",\n      price: 50\n    }, {\n      id: \"bigmac\",\n      image: ThreeTowar,\n      name: \"Биг мак\",\n      price: 200\n    }]\n  }, {\n    id: \"subway\",\n    name: \"SubWay\",\n    link: \"/place/pizikiva-gallery/subway\",\n    image: sub,\n    description: \"Сеть ресторанов быстрого питания\",\n    foods: [{\n      id: \"melt-sub\",\n      image: ThreeTowar,\n      name: \"Сабвей мелт\",\n      price: 300\n    }, {\n      id: \"day-sub\",\n      image: OneTowar,\n      name: \"Саб дня\",\n      price: 200\n    }]\n  }]\n}];\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\n  area.items.forEach(item => {\n    result[item.link] = item;\n  });\n  return result;\n}, {});\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\n  area.items.forEach(item => {\n    item.foods.forEach(food => {\n      result[food.id] = food;\n    });\n  });\n  return result;\n}, {});\n\nconst App = () => {\n  const [orderStatuses, setOrderStatuses] = useState(JSON.parse(localStorage.getItem(\"orderStatuses\") || \"null\") || {});\n  const [order, setOrder] = useState(JSON.parse(localStorage.getItem(\"orders\") || \"null\") || {});\n  const [bookingAvailable, setBookingAvailable] = useState(false);\n  useEffect(() => {\n    setBookingAvailable(Object.keys(order).length !== 0);\n  }, [order]);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    foodAreas: FOOD_AREAS,\n    order: order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/order/:areaId/:itemId\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Order, {\n    foodAreas: FOOD_AREAS,\n    order: order,\n    setActiveOrder: ({\n      itemId\n    }) => {\n      const nextStatuses = { ...orderStatuses\n      };\n      nextStatuses[itemId] = \"ACTIVE\";\n      setOrderStatuses(nextStatuses);\n      localStorage.setItem(\"orderStatuses\", JSON.stringify(nextStatuses));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/basket/:areaId/:itemId\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Basket, {\n    foodAreas: FOOD_AREAS,\n    order: order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/orders\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Orders, {\n    order: order,\n    orderStatuses: orderStatuses,\n    foodAreas: FOOD_AREAS,\n    setFinishedOrder: ({\n      itemId\n    }) => {\n      const nextStatuses = { ...orderStatuses\n      };\n      nextStatuses[itemId] = \"DONE\";\n      setOrderStatuses(nextStatuses);\n      localStorage.setItem(\"orderStatuses\", JSON.stringify(nextStatuses));\n    },\n    setCancelledOrder: ({\n      itemId\n    }) => {\n      const nextStatuses = { ...orderStatuses\n      };\n      nextStatuses[itemId] = \"CANCELED\";\n      setOrderStatuses(nextStatuses);\n      localStorage.setItem(\"orderStatuses\", JSON.stringify(nextStatuses));\n    },\n    setActiveOrder: ({\n      itemId\n    }) => {\n      const nextStatuses = { ...orderStatuses\n      };\n      nextStatuses[itemId] = \"ACTIVE\";\n      setOrderStatuses(nextStatuses);\n      localStorage.setItem(\"orderStatuses\", JSON.stringify(nextStatuses));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/place/:area/:place\",\n    render: routeProps => {\n      return /*#__PURE__*/React.createElement(Place, Object.assign({}, routeProps, {\n        item: placesMap[routeProps.location.pathname],\n        area: FOOD_AREAS[0],\n        order: order,\n        onIncrementPosition: ({\n          id,\n          itemId,\n          areaId\n        }) => {\n          const updatedOrder = { ...order\n          };\n\n          if (id in updatedOrder) {\n            updatedOrder[id].count++;\n          } else {\n            updatedOrder[id] = {\n              item: foodsMap[id],\n              count: 1\n            };\n          }\n\n          let nextOrderStatuses = { ...orderStatuses\n          };\n\n          if (Object.keys(nextOrderStatuses).length === 0) {\n            FOOD_AREAS.forEach(area => {\n              area.items.forEach(item => {\n                item.foods.forEach(food => {\n                  if (food.id in order) {\n                    const status = item.id === itemId ? \"ACTIVE\" : \"DONE\";\n                    nextOrderStatuses[item.id] = status;\n                  }\n                });\n              });\n            });\n          }\n\n          const serialized = JSON.stringify(updatedOrder);\n          localStorage.setItem(\"orders\", serialized);\n          localStorage.setItem(\"orderStatuses\", JSON.stringify(nextOrderStatuses));\n          setOrder(updatedOrder);\n          setOrderStatuses(nextOrderStatuses);\n        },\n        onDecrementPosition: ({\n          id,\n          itemId,\n          areaId\n        }) => {\n          const updatedOrder = { ...order\n          };\n\n          if (id in updatedOrder) {\n            if (updatedOrder[id].count === 1) {\n              delete updatedOrder[id];\n            } else {\n              updatedOrder[id].count--;\n            }\n          }\n\n          let nextOrderStatuses = { ...orderStatuses\n          };\n\n          if (Object.keys(nextOrderStatuses).length === 0) {\n            FOOD_AREAS.forEach(area => {\n              area.items.forEach(item => {\n                item.foods.forEach(food => {\n                  if (food.id in order) {\n                    const status = item.id === itemId ? \"ACTIVE\" : \"DONE\";\n                    nextOrderStatuses[item.id] = status;\n                  }\n                });\n              });\n            });\n          }\n\n          const serialized = JSON.stringify(updatedOrder);\n          localStorage.setItem(\"orders\", serialized);\n          localStorage.setItem(\"orderStatuses\", JSON.stringify(nextOrderStatuses));\n          setOrder(updatedOrder);\n          setOrderStatuses(nextOrderStatuses);\n        },\n        bookingAvailable: bookingAvailable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/user/Desktop/vk-hotfix-web-app/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Home","Place","Basket","Order","Orders","kfc","burger","mcdac","sub","OneTowar","TwoTowar","ThreeTowar","FourTowar","FOOD_AREAS","id","name","items","link","description","image","foods","price","composition","placesMap","reduce","result","area","forEach","item","foodsMap","food","App","orderStatuses","setOrderStatuses","JSON","parse","localStorage","getItem","order","setOrder","bookingAvailable","setBookingAvailable","Object","keys","length","itemId","nextStatuses","setItem","stringify","routeProps","location","pathname","areaId","updatedOrder","count","nextOrderStatuses","status","serialized"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./panels/Home\";\nimport Place from \"./panels/Place\";\nimport Basket from \"./panels/Basket\";\nimport Order from \"./panels/Order\";\nimport Orders from \"./panels/Orders\";\n\nimport \"./panels/App.css\";\nimport kfc from \"./img/kfc.png\";\nimport burger from \"./img/burger.png\";\nimport mcdac from \"./img/mcdac.png\";\nimport sub from \"./img/sub.png\";\nimport OneTowar from \"./img/1.png\";\nimport TwoTowar from \"./img/2.png\";\nimport ThreeTowar from \"./img/3.png\";\nimport FourTowar from \"./img/4.png\";\n\nconst FOOD_AREAS = [\n  {\n    id: \"pizikiva-gallery\",\n    name: 'ТРЦ \"Им.Пыжикова\"',\n    items: [\n      {\n        id: \"kfc\",\n        name: \"KFC\",\n        link: \"/place/pizikiva-gallery/kfc\",\n        description: \"Сеть ресторанов быстрого питания\",\n        image: kfc,\n        foods: [\n          {\n            id: \"classic\",\n            image: FourTowar,\n            name: \"Классик\",\n            price: 150,\n          },\n          {\n            id: \"potato\",\n            image: OneTowar,\n            name: \"Картофель фри\",\n            price: 50,\n          },\n        ],\n      },\n      {\n        id: \"burger-king\",\n        name: \"Burger King\",\n        link: \"/place/pizikiva-gallery/burger-king\",\n        description: \"Сеть ресторанов быстрого питания\",\n        image: burger,\n        foods: [\n          {\n            id: \"OneTowar\",\n            name: \"Товар № 1\",\n            composition: \"Состав: по ГОСТу\",\n            price: 630,\n            image: OneTowar,\n          },\n          {\n            id: \"TwoTowar\",\n            name: \"Товар № 2\",\n            composition: \"Состав: по ГОСТу\",\n            price: 450,\n            image: TwoTowar,\n          },\n          {\n            id: \"ThreeTowar\",\n            name: \"Товар № 3\",\n            composition: \"Состав: по ГОСТу\",\n            price: 800,\n            image: ThreeTowar,\n          },\n          {\n            id: \"FourthTowar\",\n            name: \"Товар № 4\",\n            composition: \"Состав по ГОСТу\",\n            price: 600,\n            image: FourTowar,\n          },\n        ],\n      },\n      {\n        id: \"macdac\",\n        name: \"McDonal's\",\n        link: \"/place/pizikiva-gallery/macdac\",\n        description: \"Сеть ресторанов быстрого питания\",\n        image: mcdac,\n        foods: [\n          {\n            id: \"hamburger\",\n            image: TwoTowar,\n            name: \"Гамбургер\",\n            price: 50,\n          },\n          {\n            id: \"bigmac\",\n            image: ThreeTowar,\n            name: \"Биг мак\",\n            price: 200,\n          },\n        ],\n      },\n      {\n        id: \"subway\",\n        name: \"SubWay\",\n        link: \"/place/pizikiva-gallery/subway\",\n        image: sub,\n        description: \"Сеть ресторанов быстрого питания\",\n        foods: [\n          {\n            id: \"melt-sub\",\n            image: ThreeTowar,\n            name: \"Сабвей мелт\",\n            price: 300,\n          },\n          {\n            id: \"day-sub\",\n            image: OneTowar,\n            name: \"Саб дня\",\n            price: 200,\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\n  area.items.forEach((item) => {\n    result[item.link] = item;\n  });\n\n  return result;\n}, {});\n\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\n  area.items.forEach((item) => {\n    item.foods.forEach((food) => {\n      result[food.id] = food;\n    });\n  });\n\n  return result;\n}, {});\n\nconst App = () => {\n  const [orderStatuses, setOrderStatuses] = useState(\n    JSON.parse(localStorage.getItem(\"orderStatuses\") || \"null\") || {}\n  );\n  const [order, setOrder] = useState(\n    JSON.parse(localStorage.getItem(\"orders\") || \"null\") || {}\n  );\n  const [bookingAvailable, setBookingAvailable] = useState(false);\n\n  useEffect(() => {\n    setBookingAvailable(Object.keys(order).length !== 0);\n  }, [order]);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home foodAreas={FOOD_AREAS} order={order} />\n        </Route>\n        <Route path=\"/order/:areaId/:itemId\" exact>\n          <Order\n            foodAreas={FOOD_AREAS}\n            order={order}\n            setActiveOrder={({ itemId }) => {\n              const nextStatuses = { ...orderStatuses };\n\n              nextStatuses[itemId] = \"ACTIVE\";\n\n              setOrderStatuses(nextStatuses);\n              localStorage.setItem(\n                \"orderStatuses\",\n                JSON.stringify(nextStatuses)\n              );\n            }}\n          />\n        </Route>\n        <Route path=\"/basket/:areaId/:itemId\" exact>\n          <Basket foodAreas={FOOD_AREAS} order={order} />\n        </Route>\n        <Route path=\"/orders\" exact>\n          <Orders\n            order={order}\n            orderStatuses={orderStatuses}\n            foodAreas={FOOD_AREAS}\n            setFinishedOrder={({ itemId }) => {\n              const nextStatuses = { ...orderStatuses };\n\n              nextStatuses[itemId] = \"DONE\";\n\n              setOrderStatuses(nextStatuses);\n              localStorage.setItem(\n                \"orderStatuses\",\n                JSON.stringify(nextStatuses)\n              );\n            }}\n            setCancelledOrder={({ itemId }) => {\n              const nextStatuses = { ...orderStatuses };\n\n              nextStatuses[itemId] = \"CANCELED\";\n\n              setOrderStatuses(nextStatuses);\n              localStorage.setItem(\n                \"orderStatuses\",\n                JSON.stringify(nextStatuses)\n              );\n            }}\n            setActiveOrder={({ itemId }) => {\n              const nextStatuses = { ...orderStatuses };\n\n              nextStatuses[itemId] = \"ACTIVE\";\n\n              setOrderStatuses(nextStatuses);\n              localStorage.setItem(\n                \"orderStatuses\",\n                JSON.stringify(nextStatuses)\n              );\n            }}\n          />\n        </Route>\n        <Route\n          path=\"/place/:area/:place\"\n          render={(routeProps) => {\n            return (\n              <Place\n                {...routeProps}\n                item={placesMap[routeProps.location.pathname]}\n                area={FOOD_AREAS[0]}\n                order={order}\n                onIncrementPosition={({ id, itemId, areaId }) => {\n                  const updatedOrder = { ...order };\n\n                  if (id in updatedOrder) {\n                    updatedOrder[id].count++;\n                  } else {\n                    updatedOrder[id] = {\n                      item: foodsMap[id],\n                      count: 1,\n                    };\n                  }\n\n                  let nextOrderStatuses = { ...orderStatuses };\n\n                  if (Object.keys(nextOrderStatuses).length === 0) {\n                    FOOD_AREAS.forEach((area) => {\n                      area.items.forEach((item) => {\n                        item.foods.forEach((food) => {\n                          if (food.id in order) {\n                            const status =\n                              item.id === itemId ? \"ACTIVE\" : \"DONE\";\n\n                            nextOrderStatuses[item.id] = status;\n                          }\n                        });\n                      });\n                    });\n                  }\n\n                  const serialized = JSON.stringify(updatedOrder);\n\n                  localStorage.setItem(\"orders\", serialized);\n                  localStorage.setItem(\n                    \"orderStatuses\",\n                    JSON.stringify(nextOrderStatuses)\n                  );\n\n                  setOrder(updatedOrder);\n                  setOrderStatuses(nextOrderStatuses);\n                }}\n                onDecrementPosition={({ id, itemId, areaId }) => {\n                  const updatedOrder = { ...order };\n\n                  if (id in updatedOrder) {\n                    if (updatedOrder[id].count === 1) {\n                      delete updatedOrder[id];\n                    } else {\n                      updatedOrder[id].count--;\n                    }\n                  }\n\n                  let nextOrderStatuses = { ...orderStatuses };\n\n                  if (Object.keys(nextOrderStatuses).length === 0) {\n                    FOOD_AREAS.forEach((area) => {\n                      area.items.forEach((item) => {\n                        item.foods.forEach((food) => {\n                          if (food.id in order) {\n                            const status =\n                              item.id === itemId ? \"ACTIVE\" : \"DONE\";\n\n                            nextOrderStatuses[item.id] = status;\n                          }\n                        });\n                      });\n                    });\n                  }\n\n                  const serialized = JSON.stringify(updatedOrder);\n\n                  localStorage.setItem(\"orders\", serialized);\n                  localStorage.setItem(\n                    \"orderStatuses\",\n                    JSON.stringify(nextOrderStatuses)\n                  );\n\n                  setOrder(updatedOrder);\n                  setOrderStatuses(nextOrderStatuses);\n                }}\n                bookingAvailable={bookingAvailable}\n              />\n            );\n          }}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}